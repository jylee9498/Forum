<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="/main.css" rel="stylesheet">
</head>
<body class ="grey-bg">

    <%- include("nav.ejs") %>

    <div class="white-bg">
        <% for (let i = 0; i < posts.length; i++){ %>
        <div class="list-box">
            <%= JSON.stringify(posts[i]._id) %>
            <h4>
                <a href = "/detail/<%= posts[i]._id%>">
                    <%= posts[i].title%> 
                </a>
                <a href = "/edit/<%= posts[i]._id%>">✏️ </a>
                <span class ="delete" data-id="<%= posts[i]._id %>">🗑️</span>
            </h4>
            <p><%= posts[i].content%></p>
        </div>
        <%} %>
    </div>

    <a href = "/list/next/<%=posts[posts.length-1]._id%>">다음</a>
    <script>
        // document.querySelectorAll(".delete")[0].addEventListener("click", function(){
        //     fetch("/delete", {         // fetch를 사용하면 ajax이용하는 것.(?) fetch("url")은 새로고침 없이도 GET요청함.
        //         method : "DELETE",    // method에 Post를 사용하면 새로고침 없어도 Post 요청
        //         headers : {
        //             "Content-Type" : "application/json"
        //         },
        //         body : JSON.stringify({
        //             a:1
        //         })// object나 array를 문자열로 바꿔주는 함수
        //     }); 
        // });

        // /* 서버로 전송할 때 다른 방법 */
        // /*
        //     fetch("/abc/홍길동")
        //     : url로 데이터 전송, 서버에서는 req.params로 데이터 획득 가능

        //     fetch("/abc?age=20&name=홍길동")
        //     : url로 데이터 전송, 서버에서는 req.query로 데이터 획득 가능
        //  */
        for(let i = 0; i < "<%= posts.length %>"; i ++){
        document.querySelectorAll('.delete')[i].addEventListener('click', function(e){
            fetch('/delete?docid=' + e.target.dataset.id, { // fetch - ajax 사용법
                //e.target은 현재 유저가 클릭한 html 요소
                method:"DELETE"
            }).then((r) => r.text())
            .then((r)=>{
                e.target.parentElement.parentElement.style.display = "none";
                
            })
            /* fetch()함수와 같이 늦게 처리가 되는 함수의 작업이 완료가 됐을 때, 
               특정 코드를 실행하고 싶을 때 then()함수를 사용하거나 await을 붙이거나 해야한다.
            */

            // fetch("/특정url")
            // .then((r)=>{
            //     if(r.status === 200){
            //         return r.json()
            //     }else{
            //         // 서버가 에러코드 전송시 실행할 코드
            //     }
            // }).then((result =>{
            //     // 성공 시 실행할 코드
            // })).catch((error)=>{
            //     //인터넷 문제 등으로 실패시 실행할 코드
            // })
        });
    }
    
    
    </script>
</body>
</html>